---
helm:
  repo: https://grafana.github.io/helm-charts
  chart: loki
  version: 6.10.2

dependsOn:
  - name: observability-grafana-agent-cluster

values:
  deploymentMode: SimpleScalable
  chunksCache:
    allocatedMemory: 2048
  loki:
    structuredConfig:
      auth_enabled: false
      server:
        log_level: info
        http_listen_port: 3100
        grpc_listen_port: 9095

      limits_config:
        retention_period: 14d
        allow_structured_metadata: false
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        split_queries_by_interval: 1h
        max_query_parallelism: 32
        ingestion_rate_mb: 64
        ingestion_burst_size_mb: 128
        shard_streams:
          enabled: true

      query_scheduler:
        max_outstanding_requests_per_tenant: 4096
      frontend:
        max_outstanding_per_tenant: 4096

      schema_config:
        configs:
          - from: "2024-04-01"
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: loki_index_
              period: 24h

      common:
        path_prefix: /var/loki
        replication_factor: 2
        storage:
          s3:
            s3: null
            insecure: true
            s3forcepathstyle: true
        ring:
          kvstore:
            store: memberlist
      ruler:
        enable_api: true
        enable_alertmanager_v2: true
        alertmanager_url: http://mimir.${SECRET_DOMAIN}/alertmanager
        storage:
          type: local
          local:
            directory: /rules
        rule_path: /tmp/scratch

      ingester:
        chunk_encoding: snappy

      analytics:
        reporting_enabled: false
  gateway:
    enabled: true
    replicas: 2
    ingress:
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        cert-manager.io/cluster-issuer: letsencrypt-production
      hosts:
        - host: "loki.${SECRET_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: loki-gateway-tls
          hosts:
            - "loki.${SECRET_DOMAIN}"
  write:
    replicas: 2
    persistence:
      size: 20Gi
      storageClass: ceph-block
  read:
    replicas: 2
    persistence:
      size: 20Gi
      storageClass: ceph-block
    extraVolumeMounts:
      - name: rules
        mountPath: /rules
    extraVolumes:
      - name: rules
        emptyDir: {}
  backend:
    replicas: 2
    persistence:
      size: 20Gi
      storageClass: ceph-block
      extraVolumeMounts:
        - name: rules
          mountPath: /rules/fake
        - name: scratch
          mountPath: /tmp/scratch
      extraVolumes:
        - name: rules
          configMap:
            name: loki-alerting-rules
        - name: scratch
          emptyDir: {}
  monitoring:
    dashboards:
      annotations:
        grafana_folder: Loki
    selfMonitoring:
      enabled: false
      grafanaAgent:
        installOperator: false
    lokiCanary:
      enabled: false
  test:
    enabled: false

valuesFrom:
  - targetPath: loki.storage.s3.region
    kind: ConfigMap
    name: loki-v3
    valuesKey: BUCKET_REGION
  - targetPath: loki.storage.bucketNames.chunks
    kind: ConfigMap
    name: loki-v3
    valuesKey: BUCKET_NAME
  - targetPath: loki.storage.s3.endpoint
    kind: ConfigMap
    name: loki-v3
    valuesKey: BUCKET_HOST
  - targetPath: loki.storage.s3.accessKeyId
    kind: Secret
    name: loki-v3
    valuesKey: AWS_ACCESS_KEY_ID
  - targetPath: loki.storage.s3.secretAccessKey
    kind: Secret
    name: loki-v3
    valuesKey: AWS_SECRET_ACCESS_KEY

resources:
  - apiVersion: objectbucket.io/v1alpha1
    kind: ObjectBucketClaim
    metadata:
      name: loki-v3
    spec:
      bucketName: loki-v3
      storageClassName: ceph-bucket

  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: loki-alerting-rules
    data:
      loki-alerting-rules.yaml: |
        groups:
        - name: smart
          rules:
            - alert: SMARTFailure
              expr: |
                sum by (hostname) (count_over_time({hostname=~".+"} | json | _SYSTEMD_UNIT = "smartmontools.service" !~ "(?i)previous self-test completed without error" !~ "(?i)Prefailure" |~ "(?i)(error|fail)"[2m])) > 0
              for: 2m
              labels:
                severity: critical
                category: logs
              annotations:
                instance: "{{ $labels.instance }}"
                summary: "{{ $labels.instance }} has reported SMART failures"
        - name: zigbee2mqtt
          rules:
            - alert: ZigbeeMQTTUnreachable
              expr: |
                sum(count_over_time({instance="zigbee2mqtt"} |~ "(?i)not connected to mqtt server"[2m])) > 0
              for: 2m
              labels:
                severity: critical
                category: logs
              annotations:
                instance: "{{ $labels.instance }}"
                summary: "{{ $labels.instance }} is unable to reach MQTT"
        - name: ssh
          rules:
            - alert: SSHSuccessfulLoginDetected
              expr: |
                {instance=~".+"} |~ "sshd.+session opened"
              for: 1s
              labels:
                severity: critical
                category: logs
              annotations:
                instance: "{{ $labels.instance }}"
                summary: "SSH login detected on {{ $labels.instance }}"
            - alert: SSHInvalidUserDetected
              expr: |
                {instance=~".+"} |~ "sshd.+Invalid user"
              for: 1s
              labels:
                severity: critical
                category: logs
              annotations:
                instance: "{{ $labels.instance }}"
                summary: "Invalid user attempted to login to {{ $labels.instance }}"
            - alert: SSHFailedLoginDetected
              expr: |
                {instance=~".+"} |~ "sshd.+Failed password"
              for: 1s
              labels:
                severity: critical
                category: logs
              annotations:
                instance: "{{ $labels.instance }}"
                summary: "Attempted SSH login on {{ $labels.instance }}"
            - alert: InternalSSHAttemptBlocked
              expr: |
                {instance=~"ash-nazg"} |~ "ipv4-USERS-TO-INFRA.+DPT=22 "
              for: 1s
              labels:
                severity: critical
                category: logs
              annotations:
                instance: "{{ $labels.instance }}"
                summary: "Internal SSH attempt was made from a blocked network."
